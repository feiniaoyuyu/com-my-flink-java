<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com-pateo-flink</groupId>
		<artifactId>com-pateo-flink</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>com-pateo-java</artifactId>
	<name>com-pateo-java</name>
	<url>http://maven.apache.org</url>
	<properties>
		<flink.version>1.2.0</flink.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-core-asl -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.9.13</version>
		</dependency>

		<dependency>
			<groupId>jdk.tools</groupId>
			<artifactId>jdk.tools</artifactId>
			<version>1.8</version>
			<scope>system</scope>
			<systemPath>${JAVA_HOME}/lib/tools.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-java</artifactId>
			<version>${flink.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-streaming-java_2.10</artifactId>
			<version>${flink.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-clients_2.10</artifactId>
			<version>${flink.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-connector-kafka-0.8_2.10</artifactId>
			<version>${flink.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-connector-twitter_2.10</artifactId>
			<version>${flink.version}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.9</version><!--$NO-MVN-MAN-VER$ -->
				<executions>
					<execution>
						<id>unpack</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<!-- For WordCount example data -->
								<artifactItem>
									<groupId>org.apache.flink</groupId>
									<artifactId>flink-examples-batch_2.10</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/classes</outputDirectory>
									<includes>org/apache/flink/examples/java/wordcount/util/WordCountData.class</includes>
								</artifactItem>
								<!-- For JSON utilities -->
								<artifactItem>
									<groupId>org.apache.flink</groupId>
									<artifactId>flink-connector-twitter_2.10</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/classes</outputDirectory>
									<includes>org/apache/flink/streaming/connectors/json/*</includes>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- self-contained jars for each example -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version><!--$NO-MVN-MAN-VER$ -->
				<executions>
					<!-- Default Execution -->
					<execution>
						<id>default</id>
						<phase>package</phase>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>

					<!-- Iteration -->
					<execution>
						<id>Iteration</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>Iteration</classifier>

							<archive>
								<manifestEntries>
									<program-class>org.apache.flink.streaming.examples.iteration.IterateExample</program-class>
								</manifestEntries>
							</archive>

							<includes>
								<include>org/apache/flink/streaming/examples/iteration/*.class</include>
							</includes>
						</configuration>
					</execution>

					<!-- IncrementalLearning -->
					<execution>
						<id>IncrementalLearning</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>IncrementalLearning</classifier>

							<archive>
								<manifestEntries>
									<program-class>org.apache.flink.streaming.examples.ml.IncrementalLearningSkeleton</program-class>
								</manifestEntries>
							</archive>

							<includes>
								<include>org/apache/flink/streaming/examples/ml/*.class</include>
							</includes>
						</configuration>
					</execution>

					<!-- WindowJoin -->
					<execution>
						<id>WindowJoin</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>WindowJoin</classifier>

							<archive>
								<manifestEntries>
									<program-class>org.apache.flink.streaming.examples.join.WindowJoin</program-class>
								</manifestEntries>
							</archive>

							<includes>
								<include>org/apache/flink/streaming/examples/join/*.class</include>
								<include>org/apache/flink/streaming/examples/utils/ThrottledIterator.class</include>
							</includes>
						</configuration>
					</execution>

					<!-- Async I/O -->
					<execution>
						<id>AsyncIO</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>AsyncIO</classifier>

							<archive>
								<manifestEntries>
									<program-class>org.apache.flink.streaming.examples.async.AsyncIOExample</program-class>
								</manifestEntries>
							</archive>

							<includes>
								<include>org/apache/flink/streaming/examples/async/*.class</include>
							</includes>
						</configuration>
					</execution>

					<!-- WordCountPOJO -->
					<execution>
						<id>WordCountPOJO</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>WordCountPOJO</classifier>

							<archive>
								<manifestEntries>
									<program-class>org.apache.flink.streaming.examples.wordcount.PojoExample</program-class>
								</manifestEntries>
							</archive>

							<includes>
								<include>org/apache/flink/streaming/examples/wordcount/PojoExample.class</include>
								<include>org/apache/flink/streaming/examples/wordcount/PojoExample$*.class</include>
								<include>org/apache/flink/examples/java/wordcount/util/WordCountData.class</include>
							</includes>
						</configuration>
					</execution>

					<!-- WordCount -->
					<execution>
						<id>WordCount</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>WordCount</classifier>

							<archive>
								<manifestEntries>
									<program-class>org.apache.flink.streaming.examples.wordcount.WordCount</program-class>
								</manifestEntries>
							</archive>

							<includes>
								<include>org/apache/flink/streaming/examples/wordcount/WordCount.class</include>
								<include>org/apache/flink/streaming/examples/wordcount/WordCount$*.class</include>
								<include>org/apache/flink/examples/java/wordcount/util/WordCountData.class</include>
							</includes>
						</configuration>
					</execution>

					<!-- SocketWindowWordCount -->
					<execution>
						<id>SocketWindowWordCount</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>SocketWindowWordCount</classifier>

							<archive>
								<manifestEntries>
									<program-class>org.apache.flink.streaming.examples.socket.SocketWindowWordCount</program-class>
								</manifestEntries>
							</archive>

							<includes>
								<include>org/apache/flink/streaming/examples/socket/SocketWindowWordCount.class</include>
								<include>org/apache/flink/streaming/examples/socket/SocketWindowWordCount$*.class</include>
							</includes>
						</configuration>
					</execution>

					<!-- TopSpeedWindowing -->
					<execution>
						<id>TopSpeedWindowing</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>TopSpeedWindowing</classifier>

							<archive>
								<manifestEntries>
									<program-class>org.apache.flink.streaming.examples.windowing.TopSpeedWindowing</program-class>
								</manifestEntries>
							</archive>

							<includes>
								<include>org/apache/flink/streaming/examples/windowing/TopSpeedWindowing.class</include>
								<include>org/apache/flink/streaming/examples/windowing/TopSpeedWindowing$*.class</include>
							</includes>
						</configuration>
					</execution>

					<!-- SessionWindowing -->
					<execution>
						<id>SessionWindowing</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>SessionWindowing</classifier>

							<archive>
								<manifestEntries>
									<program-class>org.apache.flink.streaming.examples.windowing.SessionWindowing</program-class>
								</manifestEntries>
							</archive>

							<includes>
								<include>org/apache/flink/streaming/examples/windowing/SessionWindowing.class</include>
								<include>org/apache/flink/streaming/examples/windowing/SessionWindowing$*.class</include>
							</includes>
						</configuration>
					</execution>

				</executions>
			</plugin>


			<!-- Scala Compiler -->
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.1.4</version>
				<executions>
					<!-- Run scala compiler in the process-resources phase, so that dependencies 
						on scala classes can be resolved later in the (Java) compile phase -->
					<execution>
						<id>scala-compile-first</id>
						<phase>process-resources</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>

					<!-- Run scala compiler in the process-test-resources phase, so that 
						dependencies on scala classes can be resolved later in the (Java) test-compile 
						phase -->
					<execution>
						<id>scala-test-compile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<jvmArgs>
						<jvmArg>-Xms128m</jvmArg>
						<jvmArg>-Xmx512m</jvmArg>
					</jvmArgs>
				</configuration>
			</plugin>

			<!-- Eclipse Integration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<projectnatures>
						<projectnature>org.scala-ide.sdt.core.scalanature</projectnature>
						<projectnature>org.eclipse.jdt.core.javanature</projectnature>
					</projectnatures>
					<buildcommands>
						<buildcommand>org.scala-ide.sdt.core.scalabuilder</buildcommand>
					</buildcommands>
					<classpathContainers>
						<classpathContainer>org.scala-ide.sdt.launching.SCALA_CONTAINER</classpathContainer>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
					</classpathContainers>
					<excludes>
						<exclude>org.scala-lang:scala-library</exclude>
						<exclude>org.scala-lang:scala-compiler</exclude>
					</excludes>
					<sourceIncludes>
						<sourceInclude>**/*.scala</sourceInclude>
						<sourceInclude>**/*.java</sourceInclude>
					</sourceIncludes>
				</configuration>
			</plugin>

			<!-- Adding scala source directories to build path -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<!-- Add src/main/scala to eclipse build path -->
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/scala</source>
							</sources>
						</configuration>
					</execution>
					<!-- Add src/test/scala to eclipse build path -->
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/test/scala</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--simplify the name of example JARs for build-target/examples -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>rename</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<copy
									file="${project.basedir}/target/flink-examples-streaming_2.10-${project.version}-IncrementalLearning.jar"
									tofile="${project.basedir}/target/IncrementalLearning.jar" />
								<copy
									file="${project.basedir}/target/flink-examples-streaming_2.10-${project.version}-Iteration.jar"
									tofile="${project.basedir}/target/Iteration.jar" />
								<copy
									file="${project.basedir}/target/flink-examples-streaming_2.10-${project.version}-SessionWindowing.jar"
									tofile="${project.basedir}/target/SessionWindowing.jar" />
								<copy
									file="${project.basedir}/target/flink-examples-streaming_2.10-${project.version}-TopSpeedWindowing.jar"
									tofile="${project.basedir}/target/TopSpeedWindowing.jar" />
								<copy
									file="${project.basedir}/target/flink-examples-streaming_2.10-${project.version}-WindowJoin.jar"
									tofile="${project.basedir}/target/WindowJoin.jar" />
								<copy
									file="${project.basedir}/target/flink-examples-streaming_2.10-${project.version}-WordCount.jar"
									tofile="${project.basedir}/target/WordCount.jar" />
								<copy
									file="${project.basedir}/target/flink-examples-streaming_2.10-${project.version}-SocketWindowWordCount.jar"
									tofile="${project.basedir}/target/SocketWindowWordCount.jar" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Use the shade plugin to build a fat jar for the kafka example -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<id>fat-jar-kafka-example</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadeTestJar>false</shadeTestJar>
							<shadedArtifactAttached>false</shadedArtifactAttached>
							<createDependencyReducedPom>false</createDependencyReducedPom>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>org.apache.flink.streaming.examples.kafka.ReadFromKafka</mainClass>
								</transformer>
							</transformers>
							<finalName>Kafka</finalName>
							<!--- <outputFile>Kafka.jar</outputFile> -->
							<filters>
								<filter>
									<artifact>*</artifact>
									<includes>
										<include>org/apache/flink/streaming/examples/kafka/**</include>
										<include>org/apache/flink/streaming/**</include>
										<include>org/apache/kafka/**</include>
										<include>org/apache/curator/**</include>
										<include>org/apache/zookeeper/**</include>
										<include>org/apache/jute/**</include>
										<include>org/I0Itec/**</include>
										<include>jline/**</include>
										<include>com/yammer/**</include>
										<include>kafka/**</include>
									</includes>
								</filter>
							</filters>
						</configuration>
					</execution>
					<execution>
						<id>fat-jar-twitter-example</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadeTestJar>false</shadeTestJar>
							<shadedArtifactAttached>false</shadedArtifactAttached>
							<createDependencyReducedPom>false</createDependencyReducedPom>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>org.apache.flink.streaming.examples.twitter.TwitterExample</mainClass>
								</transformer>
							</transformers>
							<finalName>Twitter</finalName>
							<filters>
								<filter>
									<artifact>*</artifact>
									<includes>
										<include>org/apache/flink/streaming/examples/twitter/**</include>
										<include>org/apache/flink/streaming/connectors/twitter/**</include>
										<include>org/apache/http/**</include>
										<include>com/twitter/**</include>
										<include>build.properties</include>
									</includes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>
</project>
