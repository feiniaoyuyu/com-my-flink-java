<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>com-pateo-flink</artifactId>
		<groupId>com-pateo-flink</groupId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>com-pateo-flink-scala</artifactId>
	<version>1.0</version>
	<name>${project.artifactId}</name>
	<description>My wonderfull scala app</description>
	<inceptionYear>2010</inceptionYear>
	<licenses>
		<license>
			<name>My License</name>
			<url>http://....</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<encoding>UTF-8</encoding>
		<scala.tools.version>2.10</scala.tools.version>
		<scala.version>2.10.4</scala.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<flink-version>1.2.0</flink-version>

	</properties>

	<dependencies>

		<!-- <dependency> <groupId>org.scala-lang</groupId> <artifactId>scala-library</artifactId> 
			<version>${scala.version}</version> </dependency> <dependency> <groupId>org.specs2</groupId> 
			<artifactId>specs2_${scala.tools.version}</artifactId> <version>1.13</version> 
			<scope>test</scope> </dependency> <dependency> <groupId>org.scalatest</groupId> 
			<artifactId>scalatest_${scala.tools.version}</artifactId> <version>2.0.M6-SNAP8</version> 
			<scope>test</scope> </dependency> <dependency> <groupId>jdk.tools</groupId> 
			<artifactId>jdk.tools</artifactId> <version>1.8</version> <scope>system</scope> 
			<systemPath>${JAVA_HOME}/lib/tools.jar</systemPath> </dependency> <dependency> 
			<groupId>org.apache.flink</groupId> <artifactId>flink-scala_2.10</artifactId> 
			<version>${flink-version}</version> </dependency> <dependency> <groupId>org.apache.flink</groupId> 
			<artifactId>flink-streaming-scala_2.10</artifactId> <version>${flink-version}</version> 
			</dependency> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-kafka-0.8_2.10</artifactId> 
			<version>${flink.version}</version> </dependency> <dependency> <groupId>org.apache.flink</groupId> 
			<artifactId>flink-clients_2.10</artifactId> <version>${flink-version}</version> 
			</dependency> -->
	</dependencies>

	<build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<testSourceDirectory>src/test/scala</testSourceDirectory>
		<plugins>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<charset>${project.build.sourceEncoding}</charset>
					<scalaVersion>${scala.version}</scalaVersion>
					<args>
						<arg>-feature</arg>
					</args>
				</configuration>
				<executions>
					<execution>
						<id>scala-compile-first</id>
						<phase>process-resources</phase>
						<goals>
							<goal>add-source</goal>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>scala-test-compile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<skipTests>true</skipTests>
					<skip>true</skip>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

			<!-- ������jar��������� -->
			<!-- �˴�Ϊ�˲���������ļ�����λ��Ϊ��Ŀ��Ŀ¼�� -->
			<plugin>

				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<!-- <finalName>${project.artifactId}</finalName> <attach>true</attach> -->
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<mainClass>org.apache.spark.sql.datasources.hbase.Test</mainClass>
						</manifest>
					</archive>
				</configuration>

				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					<junitxml>.</junitxml>
					<filereports>WDF TestSuite.txt</filereports>
					<parallel>false</parallel>
				</configuration>
				<executions>
					<execution>
						<id>test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<argLine>-XX:MaxPermSize=2048m </argLine>
							<skipTests>true</skipTests>
						</configuration>
					</execution>
					<execution>
						<id>integration-test</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<tagsToExclude>Integration-Test</tagsToExclude>
							<argLine>
								-Xmx2048m -XX:MaxPermSize=2048m
								-XX:ReservedCodeCacheSize=2048m
							</argLine>
							<parallel>false</parallel>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- clover fails due to scala/java cross compile. This guarantees that 
				the scala is compiled before the java that will be evaluated by code coverage 
				(scala will not be). https://confluence.atlassian.com/display/CLOVERKB/Java-+Scala+cross-compilation+error+-+cannot+find+symbol -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>validate</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/scala</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-source</id>
						<phase>validate</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/test/scala</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
